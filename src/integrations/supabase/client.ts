// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('Supabase URL or Anon Key is missing. Please check your environment variables.');
  console.error('VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY must be set for the application to work correctly.');
  
  // Add a global notification in development mode
  if (import.meta.env.DEV) {
    const errorMessage = document.createElement('div');
    errorMessage.style.position = 'fixed';
    errorMessage.style.top = '0';
    errorMessage.style.left = '0';
    errorMessage.style.width = '100%';
    errorMessage.style.padding = '10px';
    errorMessage.style.backgroundColor = '#ff4040';
    errorMessage.style.color = 'white';
    errorMessage.style.zIndex = '9999';
    errorMessage.style.textAlign = 'center';
    errorMessage.textContent = 'Supabase configuration error. Check console for details.';
    document.body.appendChild(errorMessage);
  }
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  supabaseUrl || '', 
  supabaseKey || ''
);

// Test the connection when the app initializes
(async () => {
  try {
    const { data, error } = await supabase.from('notes').select('count').limit(1);
    
    if (error) {
      console.error('Supabase connection test failed:', error);
    } else {
      console.log('Supabase connection successful!');
    }
  } catch (err) {
    console.error('Error testing Supabase connection:', err);
  }
})();